import Control.Monad (msum, (>=>))
import Data.List (delete, sort, group)
import Data.Either (isRight)
import Data.Foldable (toList)
import Data.Sequence hiding (zipWith, filter, sort)
mcompose = foldr (>=>) return
emptyPuzzle = Data.Sequence.replicate (9 * 9) (Right [1..9])
newPuzzle xs = mcompose (zipWith adjustCell [0..] $ concat xs) emptyPuzzle
puzzleToList = go . toList
    where go [] = []
          go xs = let (first, rest) = Prelude.splitAt 9 xs in (either id (const 0) <$> first) : go rest
sudoku puzzle = maybe (Just puzzle) (msum . map sudoku . makePuzzles puzzle) (findIndexL isRight puzzle)
makePuzzles puzzle k = let Right es = puzzle `index` k in [x | Just x <- [adjustCell k e puzzle | e <- es]]
adjustCell _ 0 = Just
adjustCell k e = mcompose [updateAdjacents j e | j <- adjacents k] . update k (Left e)
updateAdjacents k e puzzle = case delete e <$> puzzle `index` k of
    Right []    -> Nothing
    Left _      -> Just puzzle
    c           -> Just (update k c puzzle)
main = getContents >>= putStrLn . maybe "No solution found" (unlines . map (unwords . map show) . puzzleToList) . (sudoku =<<) . newPuzzle . map (map read . words) . lines
{-
adjacents' n = delete n . map head . group . sort $ pos
    where pos = let (y, x) = n `divMod` 9 in [x, x + 9 .. x + 9 * 8] ++ [9 * y .. 9 * y + 8] ++ [9 * (q + 3 * (y `div` 3)) + (p + 3 * (x `div` 3)) | p <- [0..2], q <- [0..2]]
-}
adjacents :: Int -> [Int]
adjacents 0  = [1,2,3,4,5,6,7,8,9,10,11,18,19,20,27,36,45,54,63,72]
adjacents 1  = [0,2,3,4,5,6,7,8,9,10,11,18,19,20,28,37,46,55,64,73]
adjacents 2  = [0,1,3,4,5,6,7,8,9,10,11,18,19,20,29,38,47,56,65,74]
adjacents 3  = [0,1,2,4,5,6,7,8,12,13,14,21,22,23,30,39,48,57,66,75]
adjacents 4  = [0,1,2,3,5,6,7,8,12,13,14,21,22,23,31,40,49,58,67,76]
adjacents 5  = [0,1,2,3,4,6,7,8,12,13,14,21,22,23,32,41,50,59,68,77]
adjacents 6  = [0,1,2,3,4,5,7,8,15,16,17,24,25,26,33,42,51,60,69,78]
adjacents 7  = [0,1,2,3,4,5,6,8,15,16,17,24,25,26,34,43,52,61,70,79]
adjacents 8  = [0,1,2,3,4,5,6,7,15,16,17,24,25,26,35,44,53,62,71,80]
adjacents 9  = [0,1,2,10,11,12,13,14,15,16,17,18,19,20,27,36,45,54,63,72]
adjacents 10 = [0,1,2,9,11,12,13,14,15,16,17,18,19,20,28,37,46,55,64,73]
adjacents 11 = [0,1,2,9,10,12,13,14,15,16,17,18,19,20,29,38,47,56,65,74]
adjacents 12 = [3,4,5,9,10,11,13,14,15,16,17,21,22,23,30,39,48,57,66,75]
adjacents 13 = [3,4,5,9,10,11,12,14,15,16,17,21,22,23,31,40,49,58,67,76]
adjacents 14 = [3,4,5,9,10,11,12,13,15,16,17,21,22,23,32,41,50,59,68,77]
adjacents 15 = [6,7,8,9,10,11,12,13,14,16,17,24,25,26,33,42,51,60,69,78]
adjacents 16 = [6,7,8,9,10,11,12,13,14,15,17,24,25,26,34,43,52,61,70,79]
adjacents 17 = [6,7,8,9,10,11,12,13,14,15,16,24,25,26,35,44,53,62,71,80]
adjacents 18 = [0,1,2,9,10,11,19,20,21,22,23,24,25,26,27,36,45,54,63,72]
adjacents 19 = [0,1,2,9,10,11,18,20,21,22,23,24,25,26,28,37,46,55,64,73]
adjacents 20 = [0,1,2,9,10,11,18,19,21,22,23,24,25,26,29,38,47,56,65,74]
adjacents 21 = [3,4,5,12,13,14,18,19,20,22,23,24,25,26,30,39,48,57,66,75]
adjacents 22 = [3,4,5,12,13,14,18,19,20,21,23,24,25,26,31,40,49,58,67,76]
adjacents 23 = [3,4,5,12,13,14,18,19,20,21,22,24,25,26,32,41,50,59,68,77]
adjacents 24 = [6,7,8,15,16,17,18,19,20,21,22,23,25,26,33,42,51,60,69,78]
adjacents 25 = [6,7,8,15,16,17,18,19,20,21,22,23,24,26,34,43,52,61,70,79]
adjacents 26 = [6,7,8,15,16,17,18,19,20,21,22,23,24,25,35,44,53,62,71,80]
adjacents 27 = [0, 9,18,28,29,30,31,32,33,34,35,36,37,38,45,46,47,54,63,72]
adjacents 28 = [1,10,19,27,29,30,31,32,33,34,35,36,37,38,45,46,47,55,64,73]
adjacents 29 = [2,11,20,27,28,30,31,32,33,34,35,36,37,38,45,46,47,56,65,74]
adjacents 30 = [3,12,21,27,28,29,31,32,33,34,35,39,40,41,48,49,50,57,66,75]
adjacents 31 = [4,13,22,27,28,29,30,32,33,34,35,39,40,41,48,49,50,58,67,76]
adjacents 32 = [5,14,23,27,28,29,30,31,33,34,35,39,40,41,48,49,50,59,68,77]
adjacents 33 = [6,15,24,27,28,29,30,31,32,34,35,42,43,44,51,52,53,60,69,78]
adjacents 34 = [7,16,25,27,28,29,30,31,32,33,35,42,43,44,51,52,53,61,70,79]
adjacents 35 = [8,17,26,27,28,29,30,31,32,33,34,42,43,44,51,52,53,62,71,80]
adjacents 36 = [0, 9,18,27,28,29,37,38,39,40,41,42,43,44,45,46,47,54,63,72]
adjacents 37 = [1,10,19,27,28,29,36,38,39,40,41,42,43,44,45,46,47,55,64,73]
adjacents 38 = [2,11,20,27,28,29,36,37,39,40,41,42,43,44,45,46,47,56,65,74]
adjacents 39 = [3,12,21,30,31,32,36,37,38,40,41,42,43,44,48,49,50,57,66,75]
adjacents 40 = [4,13,22,30,31,32,36,37,38,39,41,42,43,44,48,49,50,58,67,76]
adjacents 41 = [5,14,23,30,31,32,36,37,38,39,40,42,43,44,48,49,50,59,68,77]
adjacents 42 = [6,15,24,33,34,35,36,37,38,39,40,41,43,44,51,52,53,60,69,78]
adjacents 43 = [7,16,25,33,34,35,36,37,38,39,40,41,42,44,51,52,53,61,70,79]
adjacents 44 = [8,17,26,33,34,35,36,37,38,39,40,41,42,43,51,52,53,62,71,80]
adjacents 45 = [0, 9,18,27,28,29,36,37,38,46,47,48,49,50,51,52,53,54,63,72]
adjacents 46 = [1,10,19,27,28,29,36,37,38,45,47,48,49,50,51,52,53,55,64,73]
adjacents 47 = [2,11,20,27,28,29,36,37,38,45,46,48,49,50,51,52,53,56,65,74]
adjacents 48 = [3,12,21,30,31,32,39,40,41,45,46,47,49,50,51,52,53,57,66,75]
adjacents 49 = [4,13,22,30,31,32,39,40,41,45,46,47,48,50,51,52,53,58,67,76]
adjacents 50 = [5,14,23,30,31,32,39,40,41,45,46,47,48,49,51,52,53,59,68,77]
adjacents 51 = [6,15,24,33,34,35,42,43,44,45,46,47,48,49,50,52,53,60,69,78]
adjacents 52 = [7,16,25,33,34,35,42,43,44,45,46,47,48,49,50,51,53,61,70,79]
adjacents 53 = [8,17,26,33,34,35,42,43,44,45,46,47,48,49,50,51,52,62,71,80]
adjacents 54 = [0, 9,18,27,36,45,55,56,57,58,59,60,61,62,63,64,65,72,73,74]
adjacents 55 = [1,10,19,28,37,46,54,56,57,58,59,60,61,62,63,64,65,72,73,74]
adjacents 56 = [2,11,20,29,38,47,54,55,57,58,59,60,61,62,63,64,65,72,73,74]
adjacents 57 = [3,12,21,30,39,48,54,55,56,58,59,60,61,62,66,67,68,75,76,77]
adjacents 58 = [4,13,22,31,40,49,54,55,56,57,59,60,61,62,66,67,68,75,76,77]
adjacents 59 = [5,14,23,32,41,50,54,55,56,57,58,60,61,62,66,67,68,75,76,77]
adjacents 60 = [6,15,24,33,42,51,54,55,56,57,58,59,61,62,69,70,71,78,79,80]
adjacents 61 = [7,16,25,34,43,52,54,55,56,57,58,59,60,62,69,70,71,78,79,80]
adjacents 62 = [8,17,26,35,44,53,54,55,56,57,58,59,60,61,69,70,71,78,79,80]
adjacents 63 = [0, 9,18,27,36,45,54,55,56,64,65,66,67,68,69,70,71,72,73,74]
adjacents 64 = [1,10,19,28,37,46,54,55,56,63,65,66,67,68,69,70,71,72,73,74]
adjacents 65 = [2,11,20,29,38,47,54,55,56,63,64,66,67,68,69,70,71,72,73,74]
adjacents 66 = [3,12,21,30,39,48,57,58,59,63,64,65,67,68,69,70,71,75,76,77]
adjacents 67 = [4,13,22,31,40,49,57,58,59,63,64,65,66,68,69,70,71,75,76,77]
adjacents 68 = [5,14,23,32,41,50,57,58,59,63,64,65,66,67,69,70,71,75,76,77]
adjacents 69 = [6,15,24,33,42,51,60,61,62,63,64,65,66,67,68,70,71,78,79,80]
adjacents 70 = [7,16,25,34,43,52,60,61,62,63,64,65,66,67,68,69,71,78,79,80]
adjacents 71 = [8,17,26,35,44,53,60,61,62,63,64,65,66,67,68,69,70,78,79,80]
adjacents 72 = [0, 9,18,27,36,45,54,55,56,63,64,65,73,74,75,76,77,78,79,80]
adjacents 73 = [1,10,19,28,37,46,54,55,56,63,64,65,72,74,75,76,77,78,79,80]
adjacents 74 = [2,11,20,29,38,47,54,55,56,63,64,65,72,73,75,76,77,78,79,80]
adjacents 75 = [3,12,21,30,39,48,57,58,59,66,67,68,72,73,74,76,77,78,79,80]
adjacents 76 = [4,13,22,31,40,49,57,58,59,66,67,68,72,73,74,75,77,78,79,80]
adjacents 77 = [5,14,23,32,41,50,57,58,59,66,67,68,72,73,74,75,76,78,79,80]
adjacents 78 = [6,15,24,33,42,51,60,61,62,69,70,71,72,73,74,75,76,77,79,80]
adjacents 79 = [7,16,25,34,43,52,60,61,62,69,70,71,72,73,74,75,76,77,78,80]
adjacents 80 = [8,17,26,35,44,53,60,61,62,69,70,71,72,73,74,75,76,77,78,79]
